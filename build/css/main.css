/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */

/* Document
   ========================================================================== */

/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in iOS.
 */

html {
  line-height: 1.15;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
}

/* Sections
   ========================================================================== */

/**
 * Remove the margin in all browsers.
 */

body {
  margin: 0;
}

/**
 * Render the `main` element consistently in IE.
 */

main {
  display: block;
}

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */

h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/* Grouping content
   ========================================================================== */

/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */

hr {
  box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */

pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/* Text-level semantics
   ========================================================================== */

/**
 * Remove the gray background on active links in IE 10.
 */

a {
  background-color: transparent;
}

/**
 * 1. Remove the bottom border in Chrome 57-
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */

abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  -webkit-text-decoration: underline dotted;
  text-decoration: underline dotted;
  /* 2 */
}

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */

b,
strong {
  font-weight: bolder;
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */

code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/**
 * Add the correct font size in all browsers.
 */

small {
  font-size: 80%;
}

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/* Embedded content
   ========================================================================== */

/**
 * Remove the border on images inside links in IE 10.
 */

img {
  border-style: none;
}

/* Forms
   ========================================================================== */

/**
 * 1. Change the font styles in all browsers.
 * 2. Remove the margin in Firefox and Safari.
 */

button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */
}

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */

button,
input {
  /* 1 */
  overflow: visible;
}

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */

button,
select {
  /* 1 */
  text-transform: none;
}

/**
 * Correct the inability to style clickable types in iOS and Safari.
 */

button,
[type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button;
}

/**
 * Remove the inner border and padding in Firefox.
 */

button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

/**
 * Restore the focus styles unset by the previous rule.
 */

button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText;
}

/**
 * Correct the padding in Firefox.
 */

fieldset {
  padding: 0.35em 0.75em 0.625em;
}

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */

legend {
  box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */
}

/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */

progress {
  vertical-align: baseline;
}

/**
 * Remove the default vertical scrollbar in IE 10+.
 */

textarea {
  overflow: auto;
}

/**
 * 1. Add the correct box sizing in IE 10.
 * 2. Remove the padding in IE 10.
 */

[type="checkbox"],
[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */

[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto;
}

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */

[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
}

/**
 * Remove the inner padding in Chrome and Safari on macOS.
 */

[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */

::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}

/* Interactive
   ========================================================================== */

/*
 * Add the correct display in Edge, IE 10+, and Firefox.
 */

details {
  display: block;
}

/*
 * Add the correct display in all browsers.
 */

summary {
  display: list-item;
}

/* Misc
   ========================================================================== */

/**
 * Add the correct display in IE 10+.
 */

template {
  display: none;
}

/**
 * Add the correct display in IE 10.
 */

[hidden] {
  display: none;
}

* {
  margin: 0;
  padding: 0;
}

html {
  max-width: 2048px;
  margin: 0 auto;
  font-family: 'Ubuntu', sans-serif;
  font-size: 14px;
}

img {
  width: 100%;
  height: auto;
}

ul {
  padding: 0;
  list-style: none;
}

a {
  text-decoration: none;
  color: inherit;
}

p {
  color: #888888;
}

h2.section-title {
  font-size: 35px;
  font-weight: 400;
  text-align: center;
  margin: 32px 0;
}

.item-title {
  font-size: 20px;
  margin: 10px 0;
  font-weight: 400;
}

.container {
  max-width: 1170px;
  margin: 0 auto;
  padding-left: 10px;
  padding-right: 10px;
  height: 100%;
}

button.main-button {
  color: white;
  margin: 5px;
  padding: 12px 50px;
  background-color: #1d9d73;
  border: none;
  border-radius: 20px;
  cursor: pointer;
}

button.main-button:hover {
  background-color: #1faa7c;
}

button.main-button:active {
  background-color: #1b906a;
}

button.main-button:focus {
  outline: none;
}

button.main-button_white {
  background-color: transparent;
  border: 1px solid white;
}

button.main-button_white:hover {
  background-color: rgba(255, 255, 255, 0.1);
}

button.main-button_white:active {
  background-color: rgba(255, 255, 255, 0.2);
}

.header {
  background: url('../img/slaid1.jpg') no-repeat center;
  min-height: 620px;
  margin-top: 100px;
  display: -webkit-box;
  display: flex;
  -webkit-box-pack: center;
  justify-content: center;
  -webkit-box-align: center;
  align-items: center;
}

.header .navigation {
  position: fixed;
  background-color: white;
  width: 100%;
  max-width: 2048px;
  height: 100px;
  top: 0;
  z-index: 100;
}

.header .navigation__wrap {
  display: -webkit-box;
  display: flex;
  flex-wrap: wrap;
  margin-left: -10px;
  margin-right: -10px;
  -webkit-box-align: center;
  align-items: center;
  -webkit-box-pack: justify;
  justify-content: space-between;
  height: 100%;
}

.header .navigation__logo {
  box-sizing: border-box;
  word-wrap: break-word;
  margin-left: 10px;
  margin-right: 10px;
  display: block;
  width: 300px;
}

.header .navigation__link {
  color: #333333;
}

.header .navigation__link:hover {
  color: #1faa7c;
}

.header .navigation__link.active {
  color: #1faa7c;
}

.header .navigation__burger {
  box-sizing: border-box;
  word-wrap: break-word;
  margin-left: 10px;
  margin-right: 10px;
  display: none;
  background-color: transparent;
  border: none;
  cursor: pointer;
}

.header .navigation__burger-line {
  display: block;
  width: 20px;
  border: 2px solid #888888;
  margin: 3px;
}

.header__nav {
  display: -webkit-box;
  display: flex;
  flex-wrap: wrap;
  margin-left: -10px;
  margin-right: -10px;
  box-sizing: border-box;
  word-wrap: break-word;
  margin-left: 10px;
  margin-right: 10px;
  width: calc(41.66666666666667% - 20px);
  -webkit-box-pack: justify;
  justify-content: space-between;
  font-size: 16px;
}

.header__wrap {
  text-align: center;
}

.header__title {
  font-size: 35px;
  color: white;
  font-weight: 400;
  text-align: center;
}

.header__title span {
  font-size: 40px;
}

.presentation {
  text-align: center;
  padding-top: 20px;
}

.presentation__wrap {
  display: -webkit-box;
  display: flex;
  flex-wrap: wrap;
  margin-left: -10px;
  margin-right: -10px;
  margin-top: 40px;
  margin-bottom: 40px;
}

.presentation__item {
  box-sizing: border-box;
  word-wrap: break-word;
  margin-left: 10px;
  margin-right: 10px;
  width: calc(33.333333333333336% - 20px);
  max-width: 400px;
  margin-top: 20px;
}

.presentation__item .item-title {
  color: #1d9d73;
}

.presentation__link {
  display: block;
  position: relative;
}

.presentation__link::after {
  content: '';
  position: absolute;
  display: block;
  bottom: 3px;
  width: 100%;
  height: calc(100% - 3px);
  box-sizing: border-box;
  opacity: 0;
  -webkit-transition: opacity 0.4s;
  transition: opacity 0.4s;
}

.presentation__link:hover::after {
  opacity: 1;
  border: 10px solid rgba(37, 200, 147, 0.8);
}

.details {
  background-color: #f6f6f6;
  padding: 30px 0;
}

.details__wrap {
  display: -webkit-box;
  display: flex;
  flex-wrap: wrap;
  margin-left: -10px;
  margin-right: -10px;
  -webkit-box-pack: center;
  justify-content: center;
}

.details__item {
  box-sizing: border-box;
  word-wrap: break-word;
  margin-left: 10px;
  margin-right: 10px;
  width: calc(33.333333333333336% - 20px);
  display: -webkit-box;
  display: flex;
  margin-top: 30px;
}

.details__item-icon {
  width: 50px;
  align-self: flex-start;
  margin-right: 10px;
}

.details__item-info {
  display: -webkit-box;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  flex-direction: column;
}

.details__item-info p {
  margin-bottom: 15px;
}

.details__link {
  display: inline-block;
  color: #1d9d73;
  font-size: 16px;
  margin-top: auto;
}

.details__link:hover {
  text-decoration: underline;
}

@media screen and (max-width: 992px) {
  .container {
    padding-left: 15px;
    padding-right: 15px;
  }

  .header__nav {
    width: calc(50% - 20px);
  }

  .details__item {
    width: calc(41.66666666666667% - 20px);
  }
}

@media screen and (max-width: 720px) {
  .header {
    background-position: center right 40%;
  }

  .header .navigation__logo {
    width: 200px;
  }

  .header .navigation__burger {
    display: block;
  }

  .header__nav {
    display: none;
  }

  .presentation__item {
    width: calc(50% - 20px);
  }

  .details__item {
    width: calc(75% - 20px);
  }
}

@media screen and (max-width: 576px) {
  .presentation__item {
    width: calc(100% - 20px);
  }

  .details__item {
    width: calc(100% - 20px);
  }
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
